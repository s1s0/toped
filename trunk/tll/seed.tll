//===========================================================================
//                                                                          =
// ------------------------------------------------------------------------ =
//                      TTTTT    EEEE     L       L                         =
//                      T T T    E        L       L                         =
//                        T      EEE      L       L                         =
//                        T      E        L       L                         =
//                        T      EEEEE    LLLLL   LLLLL                     =
//                                                                          =
//   This file is a part of Toped project (C) 2001-2012 Toped developers    =
// ------------------------------------------------------------------------ =
//           $URL$
//        Created: Tue Jun 28 13:16:45 BST 2005
//     Originator: Svilen Krustev - skr@toped.org.uk
//    Description: Basic screen setup for Toped
//---------------------------------------------------------------------------
//  Revision info
//---------------------------------------------------------------------------
//      $Revision$
//          $Date$
//        $Author$
//===========================================================================

void  fillSetup() {
   int list Cross1 = {
      0x00 ,0x00 ,0x00 ,0x00 ,0x44 ,0x44 ,0x44 ,0x44 ,
      0x28 ,0x28 ,0x28 ,0x28 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x28 ,0x28 ,0x28 ,0x28 ,0x44 ,0x44 ,0x44 ,0x44 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x44 ,0x44 ,0x44 ,0x44 ,
      0x28 ,0x28 ,0x28 ,0x28 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x28 ,0x28 ,0x28 ,0x28 ,0x44 ,0x44 ,0x44 ,0x44 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x44 ,0x44 ,0x44 ,0x44 ,
      0x28 ,0x28 ,0x28 ,0x28 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x28 ,0x28 ,0x28 ,0x28 ,0x44 ,0x44 ,0x44 ,0x44 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x44 ,0x44 ,0x44 ,0x44 ,
      0x28 ,0x28 ,0x28 ,0x28 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x28 ,0x28 ,0x28 ,0x28 ,0x44 ,0x44 ,0x44 ,0x44 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
   };

   int list Dots1 = {
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
   };

   int list FPattern = {
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x07 ,0xff ,0xff ,0x00 ,
      0x07 ,0xff ,0xff ,0x00 ,0x07 ,0xff ,0xff ,0x00 ,
      0x07 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,
      0x07 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,
      0x07 ,0x00 ,0x00 ,0x00 ,0x07 ,0xf8 ,0x00 ,0x00 ,
      0x07 ,0xf8 ,0x00 ,0x00 ,0x07 ,0xf8 ,0x00 ,0x00 ,
      0x07 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,
      0x07 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,
      0x07 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,
      0x07 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,
      0x07 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,
      0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
   };

   int list FatDots1 = {
      0x40 ,0x40 ,0x40 ,0x40 ,0xe0 ,0xe0 ,0xe0 ,0xe0 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0xe0 ,0xe0 ,0xe0 ,0xe0 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0xe0 ,0xe0 ,0xe0 ,0xe0 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0xe0 ,0xe0 ,0xe0 ,0xe0 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
   };

   int list FatDots2 = {
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x0e ,0x0e ,0x0e ,0x0e ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x0e ,0x0e ,0x0e ,0x0e ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x0e ,0x0e ,0x0e ,0x0e ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x0e ,0x0e ,0x0e ,0x0e ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00
   };

   int list HalfStAndrews = {
      0xe0 ,0x00 ,0x00 ,0x0f ,0xe0 ,0x00 ,0x00 ,0x3f ,
      0x80 ,0x00 ,0x00 ,0x3f ,0x80 ,0x00 ,0x00 ,0xff ,
      0x00 ,0x00 ,0x00 ,0xfe ,0x00 ,0x00 ,0x03 ,0xfe ,
      0x00 ,0x00 ,0x03 ,0xf8 ,0x00 ,0x00 ,0x0f ,0xf8 ,
      0x00 ,0x00 ,0x0f ,0xe0 ,0x00 ,0x00 ,0x3f ,0xe0 ,
      0x00 ,0x00 ,0x3f ,0x80 ,0x00 ,0x00 ,0xff ,0x80 ,
      0x00 ,0x00 ,0xfe ,0x00 ,0x00 ,0x03 ,0xfe ,0x00 ,
      0x00 ,0x03 ,0xf8 ,0x00 ,0x00 ,0x0f ,0xf8 ,0x00 ,
      0x00 ,0x0f ,0xe0 ,0x00 ,0x00 ,0x3f ,0xe0 ,0x00 ,
      0x00 ,0x3f ,0x80 ,0x00 ,0x00 ,0xff ,0x80 ,0x00 ,
      0x00 ,0xfe ,0x00 ,0x00 ,0x03 ,0xfe ,0x00 ,0x00 ,
      0x03 ,0xf8 ,0x00 ,0x00 ,0x0f ,0xf8 ,0x00 ,0x00 ,
      0x0f ,0xe0 ,0x00 ,0x00 ,0x3f ,0xe0 ,0x00 ,0x00 ,
      0x3f ,0x80 ,0x00 ,0x00 ,0xff ,0x80 ,0x00 ,0x00 ,
      0xfe ,0x00 ,0x00 ,0x00 ,0xfe ,0x00 ,0x00 ,0x03 ,
      0xf8 ,0x00 ,0x00 ,0x03 ,0xf8 ,0x00 ,0x00 ,0x0f
   };

   int list StAndrew = {
      0xe0 ,0x00 ,0x00 ,0x07 ,0xf0 ,0x00 ,0x00 ,0x0f ,
      0xf8 ,0x00 ,0x00 ,0x1f ,0x7c ,0x00 ,0x00 ,0x3e ,
      0x3e ,0x00 ,0x00 ,0x7c ,0x1f ,0x00 ,0x00 ,0xf8 ,
      0x0f ,0x80 ,0x01 ,0xf0 ,0x07 ,0xc0 ,0x03 ,0xe0 ,
      0x03 ,0xe0 ,0x07 ,0xc0 ,0x01 ,0xf0 ,0x0f ,0x80 ,
      0x00 ,0xf8 ,0x1f ,0x00 ,0x00 ,0x7c ,0x3e ,0x00 ,
      0x00 ,0x3e ,0x7c ,0x00 ,0x00 ,0x1f ,0xf8 ,0x00 ,
      0x00 ,0x0f ,0xf0 ,0x00 ,0x00 ,0x07 ,0xe0 ,0x00 ,
      0x00 ,0x07 ,0xe0 ,0x00 ,0x00 ,0x0f ,0xf0 ,0x00 ,
      0x00 ,0x1f ,0xf8 ,0x00 ,0x00 ,0x3e ,0x7c ,0x00 ,
      0x00 ,0x7c ,0x3e ,0x00 ,0x00 ,0xf8 ,0x1f ,0x00 ,
      0x01 ,0xf0 ,0x0f ,0x80 ,0x03 ,0xe0 ,0x07 ,0xc0 ,
      0x07 ,0xc0 ,0x03 ,0xe0 ,0x0f ,0x80 ,0x01 ,0xf0 ,
      0x1f ,0x00 ,0x00 ,0xf8 ,0x3e ,0x00 ,0x00 ,0x7c ,
      0x7c ,0x00 ,0x00 ,0x3e ,0xf8 ,0x00 ,0x00 ,0x1f ,
      0xf0 ,0x00 ,0x00 ,0x0f ,0xe0 ,0x00 ,0x00 ,0x07
   };

   int list boxtest = {
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x07 ,0xff ,0xff ,0xe0 ,
      0x07 ,0xff ,0xff ,0xe0 ,0x07 ,0xff ,0xff ,0xe0 ,
      0x07 ,0x00 ,0x00 ,0xe0 ,0x07 ,0x00 ,0x00 ,0xe0 ,
      0x07 ,0x00 ,0x00 ,0xe0 ,0x07 ,0x00 ,0x00 ,0xe0 ,
      0x07 ,0x00 ,0x00 ,0xe0 ,0x07 ,0x00 ,0x00 ,0xe0 ,
      0x07 ,0x00 ,0x00 ,0xe0 ,0x07 ,0x00 ,0x00 ,0xe0 ,
      0x07 ,0x00 ,0x00 ,0xe0 ,0x07 ,0x00 ,0x00 ,0xe0 ,
      0x07 ,0x00 ,0x00 ,0xe0 ,0x07 ,0x00 ,0x00 ,0xe0 ,
      0x07 ,0x00 ,0x00 ,0xe0 ,0x07 ,0x00 ,0x00 ,0xe0 ,
      0x07 ,0x00 ,0x00 ,0xe0 ,0x07 ,0x00 ,0x00 ,0xe0 ,
      0x07 ,0xff ,0xff ,0xe0 ,0x07 ,0xff ,0xff ,0xe0 ,
      0x07 ,0xff ,0xff ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
   };

   int list checkbd3 = {
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00
   };

   int list checkbd3s = {
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x11 ,0x11 ,0x11 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x44 ,0x44 ,0x44 ,0x44 ,0x00 ,0x00 ,0x00 ,0x00
   };

   int list checkerboard = {
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa ,
      0x55 ,0x55 ,0x55 ,0x55 ,0xaa ,0xaa ,0xaa ,0xaa
   };

   int list checkerboards = {
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55 ,
      0xaa ,0xaa ,0xaa ,0xaa ,0x55 ,0x55 ,0x55 ,0x55
   };

   int list diagPatrnBack = {
      0x80 ,0x80 ,0x80 ,0x80 ,0x40 ,0x40 ,0x40 ,0x40 ,
      0x20 ,0x20 ,0x20 ,0x20 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x08 ,0x08 ,0x08 ,0x08 ,0x04 ,0x04 ,0x04 ,0x04 ,
      0x02 ,0x02 ,0x02 ,0x02 ,0x01 ,0x01 ,0x01 ,0x01 ,
      0x80 ,0x80 ,0x80 ,0x80 ,0x40 ,0x40 ,0x40 ,0x40 ,
      0x20 ,0x20 ,0x20 ,0x20 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x08 ,0x08 ,0x08 ,0x08 ,0x04 ,0x04 ,0x04 ,0x04 ,
      0x02 ,0x02 ,0x02 ,0x02 ,0x01 ,0x01 ,0x01 ,0x01 ,
      0x80 ,0x80 ,0x80 ,0x80 ,0x40 ,0x40 ,0x40 ,0x40 ,
      0x20 ,0x20 ,0x20 ,0x20 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x08 ,0x08 ,0x08 ,0x08 ,0x04 ,0x04 ,0x04 ,0x04 ,
      0x02 ,0x02 ,0x02 ,0x02 ,0x01 ,0x01 ,0x01 ,0x01 ,
      0x80 ,0x80 ,0x80 ,0x80 ,0x40 ,0x40 ,0x40 ,0x40 ,
      0x20 ,0x20 ,0x20 ,0x20 ,0x10 ,0x10 ,0x10 ,0x10 ,
      0x08 ,0x08 ,0x08 ,0x08 ,0x04 ,0x04 ,0x04 ,0x04 ,
      0x02 ,0x02 ,0x02 ,0x02 ,0x01 ,0x01 ,0x01 ,0x01
   };

   int list diagPatrnForw = {
      0x01 ,0x01 ,0x01 ,0x01 ,0x02 ,0x02 ,0x02 ,0x02 ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x08 ,0x08 ,0x08 ,0x08 ,
      0x10 ,0x10 ,0x10 ,0x10 ,0x20 ,0x20 ,0x20 ,0x20 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0x80 ,0x80 ,0x80 ,0x80 ,
      0x01 ,0x01 ,0x01 ,0x01 ,0x02 ,0x02 ,0x02 ,0x02 ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x08 ,0x08 ,0x08 ,0x08 ,
      0x10 ,0x10 ,0x10 ,0x10 ,0x20 ,0x20 ,0x20 ,0x20 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0x80 ,0x80 ,0x80 ,0x80 ,
      0x01 ,0x01 ,0x01 ,0x01 ,0x02 ,0x02 ,0x02 ,0x02 ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x08 ,0x08 ,0x08 ,0x08 ,
      0x10 ,0x10 ,0x10 ,0x10 ,0x20 ,0x20 ,0x20 ,0x20 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0x80 ,0x80 ,0x80 ,0x80 ,
      0x01 ,0x01 ,0x01 ,0x01 ,0x02 ,0x02 ,0x02 ,0x02 ,
      0x04 ,0x04 ,0x04 ,0x04 ,0x08 ,0x08 ,0x08 ,0x08 ,
      0x10 ,0x10 ,0x10 ,0x10 ,0x20 ,0x20 ,0x20 ,0x20 ,
      0x40 ,0x40 ,0x40 ,0x40 ,0x80 ,0x80 ,0x80 ,0x80
   };

   int list diagStripeBack = {
      0xf0 ,0xf0 ,0xf0 ,0xf0 ,0x78 ,0x78 ,0x78 ,0x78 ,
      0x2c ,0x2c ,0x2c ,0x2c ,0x1e ,0x1e ,0x1e ,0x1e ,
      0x0f ,0x0f ,0x0f ,0x0f ,0x87 ,0x87 ,0x87 ,0x87 ,
      0xc2 ,0xc2 ,0xc2 ,0xc2 ,0xe1 ,0xe1 ,0xe1 ,0xe1 ,
      0xf0 ,0xf0 ,0xf0 ,0xf0 ,0x78 ,0x78 ,0x78 ,0x78 ,
      0x2c ,0x2c ,0x2c ,0x2c ,0x1e ,0x1e ,0x1e ,0x1e ,
      0x0f ,0x0f ,0x0f ,0x0f ,0x87 ,0x87 ,0x87 ,0x87 ,
      0xc2 ,0xc2 ,0xc2 ,0xc2 ,0xe1 ,0xe1 ,0xe1 ,0xe1 ,
      0xf0 ,0xf0 ,0xf0 ,0xf0 ,0x78 ,0x78 ,0x78 ,0x78 ,
      0x2c ,0x2c ,0x2c ,0x2c ,0x1e ,0x1e ,0x1e ,0x1e ,
      0x0f ,0x0f ,0x0f ,0x0f ,0x87 ,0x87 ,0x87 ,0x87 ,
      0xc2 ,0xc2 ,0xc2 ,0xc2 ,0xe1 ,0xe1 ,0xe1 ,0xe1 ,
      0xf0 ,0xf0 ,0xf0 ,0xf0 ,0x78 ,0x78 ,0x78 ,0x78 ,
      0x2c ,0x2c ,0x2c ,0x2c ,0x1e ,0x1e ,0x1e ,0x1e ,
      0x0f ,0x0f ,0x0f ,0x0f ,0x87 ,0x87 ,0x87 ,0x87 ,
      0xc2 ,0xc2 ,0xc2 ,0xc2 ,0xe1 ,0xe1 ,0xe1 ,0xe1
   };

   int list diagStripeForw = {
      0xf0 ,0xf0 ,0xf0 ,0xf0 ,0xe1 ,0xe1 ,0xe1 ,0xe1 ,
      0xc3 ,0xc3 ,0xc3 ,0xc3 ,0x87 ,0x87 ,0x87 ,0x87 ,
      0x0f ,0x0f ,0x0f ,0x0f ,0x1e ,0x1e ,0x1e ,0x1e ,
      0x3c ,0x3c ,0x3c ,0x3c ,0x78 ,0x78 ,0x78 ,0x78 ,
      0xf0 ,0xf0 ,0xf0 ,0xf0 ,0xe1 ,0xe1 ,0xe1 ,0xe1 ,
      0xc3 ,0xc3 ,0xc3 ,0xc3 ,0x87 ,0x87 ,0x87 ,0x87 ,
      0x0f ,0x0f ,0x0f ,0x0f ,0x1e ,0x1e ,0x1e ,0x1e ,
      0x3c ,0x3c ,0x3c ,0x3c ,0x78 ,0x78 ,0x78 ,0x78 ,
      0xf0 ,0xf0 ,0xf0 ,0xf0 ,0xe1 ,0xe1 ,0xe1 ,0xe1 ,
      0xc3 ,0xc3 ,0xc3 ,0xc3 ,0x87 ,0x87 ,0x87 ,0x87 ,
      0x0f ,0x0f ,0x0f ,0x0f ,0x1e ,0x1e ,0x1e ,0x1e ,
      0x3c ,0x3c ,0x3c ,0x3c ,0x78 ,0x78 ,0x78 ,0x78 ,
      0xf0 ,0xf0 ,0xf0 ,0xf0 ,0xe1 ,0xe1 ,0xe1 ,0xe1 ,
      0xc3 ,0xc3 ,0xc3 ,0xc3 ,0x87 ,0x87 ,0x87 ,0x87 ,
      0x0f ,0x0f ,0x0f ,0x0f ,0x1e ,0x1e ,0x1e ,0x1e ,
      0x3c ,0x3c ,0x3c ,0x3c ,0x78 ,0x78 ,0x78 ,0x78
   };

   int list horiHash = {
      0x00 ,0x00 ,0x00 ,0x00 ,0x78 ,0x78 ,0x78 ,0x78 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x78 ,0x78 ,0x78 ,0x78 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x3c ,0x3c ,0x3c ,0x3c ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x3c ,0x3c ,0x3c ,0x3c ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x1e ,0x1e ,0x1e ,0x1e ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x1e ,0x1e ,0x1e ,0x1e ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x0f ,0x0f ,0x0f ,0x0f ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x0f ,0x0f ,0x0f ,0x0f ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00
   };

   int list vertHash = {
      0x50 ,0x00 ,0x00 ,0x00 ,0x50 ,0x50 ,0x00 ,0x00 ,
      0x50 ,0x50 ,0x50 ,0x00 ,0x50 ,0x50 ,0x50 ,0x50 ,
      0x00 ,0x50 ,0x50 ,0x50 ,0x00 ,0x00 ,0x50 ,0x50 ,
      0x00 ,0x00 ,0x00 ,0x50 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x50 ,0x00 ,0x00 ,0x00 ,0x50 ,0x50 ,0x00 ,0x00 ,
      0x50 ,0x50 ,0x50 ,0x00 ,0x50 ,0x50 ,0x50 ,0x50 ,
      0x00 ,0x50 ,0x50 ,0x50 ,0x00 ,0x00 ,0x50 ,0x50 ,
      0x00 ,0x00 ,0x00 ,0x50 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x50 ,0x00 ,0x00 ,0x00 ,0x50 ,0x50 ,0x00 ,0x00 ,
      0x50 ,0x50 ,0x50 ,0x00 ,0x50 ,0x50 ,0x50 ,0x50 ,
      0x00 ,0x50 ,0x50 ,0x50 ,0x00 ,0x00 ,0x50 ,0x50 ,
      0x00 ,0x00 ,0x00 ,0x50 ,0x00 ,0x00 ,0x00 ,0x00 ,
      0x50 ,0x00 ,0x00 ,0x00 ,0x50 ,0x50 ,0x00 ,0x00 ,
      0x50 ,0x50 ,0x50 ,0x00 ,0x50 ,0x50 ,0x50 ,0x50 ,
      0x00 ,0x50 ,0x50 ,0x50 ,0x00 ,0x00 ,0x50 ,0x50 ,
      0x00 ,0x00 ,0x00 ,0x50 ,0x00 ,0x00 ,0x00 ,0x00
   };

   definefill("Cross1"         , Cross1         );
   definefill("Dots1"          , Dots1          );
   definefill("FPattern"       , FPattern       );
   definefill("FatDots1"       , FatDots1       );
   definefill("FatDots2"       , FatDots2       );
   definefill("HalfStAndrews"  , HalfStAndrews  );
   definefill("StAndrew"       , StAndrew       );
   definefill("boxtest"        , boxtest        );
   definefill("checkbd3"       , checkbd3       );
   definefill("checkbd3s"      , checkbd3s      );
   definefill("checkerboard"   , checkerboard   );
   definefill("checkerboards"  , checkerboards  );
   definefill("diagPatrnBack"  , diagPatrnBack  );
   definefill("diagPatrnForw"  , diagPatrnForw  );
   definefill("diagStripeBack" , diagStripeBack );
   definefill("diagStripeForw" , diagStripeForw );
   definefill("horiHash"       , horiHash       );
   definefill("vertHash"       , vertHash       );

}

void colorSetup() {
//                              R    G    B   Alpha 
   definecolor("black"       ,   0,   0,   0, 178);
   definecolor("white"       , 255, 255, 255, 178);
   definecolor("darkGray"    ,  80,  80,  80, 178);
   definecolor("gray"        , 127, 127, 127, 178);
   definecolor("lightGray"   , 191, 191, 191, 178);

   definecolor("darkCyan"    ,   0, 127, 127, 178);
   definecolor("darkMagenta" , 127,   0, 127, 178);
   definecolor("darkYellow"  , 127, 127,   0, 178);

   definecolor("past_blue"    ,127, 127, 255, 178);
   definecolor("past_green"   ,127, 255, 127, 178);
   definecolor("past_red"     ,255, 127, 127, 178);
   definecolor("red"          ,255, 0  , 0  , 178);
   definecolor("green"        ,0  , 255, 0  , 178);
   definecolor("blue"         ,0  , 0  , 255, 178);
   definecolor("darkred"      ,127, 0  , 0  , 178);
   definecolor("darkgreen"    ,0  , 127, 0  , 178);
   definecolor("darkblue"     ,0  , 0  , 127, 178);
   definecolor("cyan"         ,0  , 255, 255, 178);
   definecolor("magenta"      ,255, 0  , 255, 178);
   definecolor("yellow"       ,255, 255, 0  , 178);
   definecolor("past_cyan"    ,127, 255, 255, 178);
   definecolor("past_magenta" ,255, 127, 255, 178);
   definecolor("past_yellow"  ,255, 255, 127, 178);
   definecolor("dk_brown"     ,198, 176, 143, 178);
   definecolor("lt_brown"     ,219, 184, 137, 178);
   definecolor("orange"       ,255, 127, 0  , 178);
   definecolor("dark_orange"  ,200, 100, 0  , 178);
   definecolor("brown"        ,128,  64, 0  , 178); 
   definecolor("blue_2"       ,0  , 127, 255, 178);
   definecolor("green_2"      ,127, 255, 0  , 178);
   definecolor("bg_1"         ,224, 224, 224, 178);
//              name       color  pattern pscale width
   defineline("selected1", "", 0x5555,   5  ,	5);
   defineline("selected2", "", 0xf18f,   2  ,	5);
   defineline("selected3", "", 0xcfcf,   2  ,   5);
}

void layerSetup() {
   colorSetup();
   fillSetup();
   lmap list cifmap;
   lmap list gdsmap;
//           name         layer    Color          Fill               Selected          CIF conversion map            GDS conversion map
   layprop("NWELL"      ,{ 1, 0} ,"yellow"      ,"Dots1"          , "selected3" );
   layprop("LAYER0"     ,{ 0, 0} ,"past_cyan"   ,"FatDots2"       , "selected3" );
   layprop("ACTIVE"     ,{ 2, 0} ,"blue"        ,"diagStripeBack" , "selected3" );
   layprop("UNKWN_1"    ,{ 3, 0} ,"darkGray"    ,""               , "selected3" );
   layprop("POLY"       ,{ 4, 0} ,"red"         ,"checkerboards"  , "selected2" );
   layprop("N_IMPL"     ,{ 5, 0} ,"white"       ,""               , "selected3" );
   layprop("P_IMPL"     ,{ 6, 0} ,"magenta"     ,""               , "selected3" );
   layprop("CONTACT"    ,{ 7, 0} ,"white"       ,"diagStripeForw" , "selected3" );
   layprop("METAL1"     ,{ 8, 0} ,"green"       ,"checkerboard"   , "selected3" );
   layprop("PASS"       ,{ 9, 0} ,"darkGray"    ,""               , "selected3" );
   layprop("UNKWN_2"    ,{10, 0} ,"white"       ,""               , "selected3" );
   layprop("UNKWN_3"    ,{11, 0} ,"white"       ,""               , "selected3" );
   layprop("UNKWN_3"    ,{12, 0} ,"white"       ,""               , "selected3" );
   layprop("P_FIELD"    ,{13, 0} ,"white"       ,""               , "selected3" );
   layprop("POLY1"      ,{14, 0} ,"cyan"        ,"Cross1"         , "selected3" );
   layprop("FUSE"       ,{15, 0} ,"white"       ,""               , "selected3" );
   layprop("VIA12"      ,{17, 0} ,"lightGray"   ,""               , "selected3" );
   layprop("METAL2"     ,{18, 0} ,"darkMagenta" ,""               , "selected3" );
   layprop("TEXT"       ,{60, 0} ,"darkGray"    ,""               , "selected1" );
   layprop("TEXT"       ,{62, 0} ,"yellow"      ,"horiHash"       , "selected2" );
   layprop("SCRIBE_LANE",{63, 0} ,"white"       ,""               , "selected3" );

   setciflaymap(cifmap);
   setgdslaymap(gdsmap);
}

void screenSetup() {
//   grid No, step in UU, color
   definegrid(0, .25 , "white"   );
   definegrid(1, 2   , "cyan"    );
   definegrid(2, 10  , "yellow"  );
   grid(0,true);
   grid(1,true);
   step(0.5);
   autopan(true);
   shapeangle(45);
}

layerSetup();
screenSetup();
newdesign("seed");
newcell("crop");
opencell("crop");
